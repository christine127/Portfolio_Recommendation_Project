{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"데이터전처리_원본","provenance":[{"file_id":"17I9xFPGPml-OqSdt5oZe9CDY85YtiTG0","timestamp":1626359965080},{"file_id":"1UGGStMqhs7PzHI2zKpp8D0s8oDrSpKiY","timestamp":1625020724211}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-3UNtbPWCZ0V","executionInfo":{"status":"ok","timestamp":1626397281344,"user_tz":-540,"elapsed":4065,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"1a4e4eca-37a9-47d7-f1b5-ac3821cb397d"},"source":["!pip install finance-datareader"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting finance-datareader\n","  Downloading https://files.pythonhosted.org/packages/83/5e/54306e72b5ff5d5ec6cc9f32cdf19602237f9bb70d64efcd527338388be3/finance_datareader-0.9.31-py3-none-any.whl\n","Collecting requests-file\n","  Downloading https://files.pythonhosted.org/packages/77/86/cdb5e8eaed90796aa83a6d9f75cfbd37af553c47a291cd47bc410ef9bdb2/requests_file-1.5.1-py2.py3-none-any.whl\n","Requirement already satisfied: pandas>=0.19.2 in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (1.1.5)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (4.41.1)\n","Requirement already satisfied: requests>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (2.23.0)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (4.2.6)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from requests-file->finance-datareader) (1.15.0)\n","Requirement already satisfied: numpy>=1.15.4 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (1.19.5)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (2.8.1)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (2018.9)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (2021.5.30)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (2.10)\n","Installing collected packages: requests-file, finance-datareader\n","Successfully installed finance-datareader-0.9.31 requests-file-1.5.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XuHPQ_GVQ_H0","executionInfo":{"status":"ok","timestamp":1626397284459,"user_tz":-540,"elapsed":3125,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"43320f2e-7392-4c1c-d01c-b13ab9d6d4c4"},"source":["!pip install opendartreader"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting opendartreader\n","  Downloading https://files.pythonhosted.org/packages/f6/e7/94af98ad3b41cf73410433b78ffd942ff0f6cf5380972f0dea5fd083ed23/OpenDartReader-0.1.1-py3-none-any.whl\n","Requirement already satisfied: requests>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from opendartreader) (2.23.0)\n","Requirement already satisfied: requests-file in /usr/local/lib/python3.7/dist-packages (from opendartreader) (1.5.1)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from opendartreader) (4.2.6)\n","Requirement already satisfied: pandas>=0.19.2 in /usr/local/lib/python3.7/dist-packages (from opendartreader) (1.1.5)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->opendartreader) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->opendartreader) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->opendartreader) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->opendartreader) (2021.5.30)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from requests-file->opendartreader) (1.15.0)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->opendartreader) (2.8.1)\n","Requirement already satisfied: numpy>=1.15.4 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->opendartreader) (1.19.5)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->opendartreader) (2018.9)\n","Installing collected packages: opendartreader\n","Successfully installed opendartreader-0.1.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vYdr6y0g9x-2","executionInfo":{"status":"ok","timestamp":1626397288680,"user_tz":-540,"elapsed":4227,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"8fbf0ab9-0ffe-42ea-9fd0-93d3937019ad"},"source":["!pip install pykrx"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting pykrx\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/87/95/35eb3cf9fc7e32c2ac1992976727decc343c9750b9d2f956b03f3b854a95/pykrx-1.0.17-py3-none-any.whl (81kB)\n","\u001b[K     |████████████████████████████████| 81kB 3.4MB/s \n","\u001b[?25hCollecting datetime\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/73/22/a5297f3a1f92468cc737f8ce7ba6e5f245fcfafeae810ba37bd1039ea01c/DateTime-4.3-py2.py3-none-any.whl (60kB)\n","\u001b[K     |████████████████████████████████| 61kB 5.0MB/s \n","\u001b[?25hRequirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from pykrx) (2.23.0)\n","Requirement already satisfied: xlrd in /usr/local/lib/python3.7/dist-packages (from pykrx) (1.1.0)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from pykrx) (1.1.5)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from pykrx) (1.19.5)\n","Collecting deprecated\n","  Downloading https://files.pythonhosted.org/packages/fb/73/994edfcba74443146c84b91921fcc269374354118d4f452fb0c54c1cbb12/Deprecated-1.2.12-py2.py3-none-any.whl\n","Requirement already satisfied: pytz in /usr/local/lib/python3.7/dist-packages (from datetime->pykrx) (2018.9)\n","Collecting zope.interface\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/bb/a7/94e1a92c71436f934cdd2102826fa041c83dcb7d21dd0f1fb1a57f6e0620/zope.interface-5.4.0-cp37-cp37m-manylinux2010_x86_64.whl (251kB)\n","\u001b[K     |████████████████████████████████| 256kB 7.2MB/s \n","\u001b[?25hRequirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->pykrx) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->pykrx) (2021.5.30)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->pykrx) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->pykrx) (3.0.4)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas->pykrx) (2.8.1)\n","Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.7/dist-packages (from deprecated->pykrx) (1.12.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from zope.interface->datetime->pykrx) (57.0.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas->pykrx) (1.15.0)\n","Installing collected packages: zope.interface, datetime, deprecated, pykrx\n","Successfully installed datetime-4.3 deprecated-1.2.12 pykrx-1.0.17 zope.interface-5.4.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GrBLvHJfCGv_"},"source":["import pandas as pd\n","import numpy as np\n","import FinanceDataReader as fdr\n","import OpenDartReader \n","from pykrx import stock\n","import datetime"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PIX9TQRPRMvW"},"source":["api_key = '5729a47b92ddd434526831ee99ff01f65e6434db'\n","dart = OpenDartReader(api_key) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"v3FJoquoJOXS"},"source":["# fdr.StockListing('KRX')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rQm32nXBvHQR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626397323881,"user_tz":-540,"elapsed":30893,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"61c2baf0-400d-44e9-c99e-cb2d1097642a"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EF-NlHKgCgZF"},"source":["dataset = pd.read_excel('/content/drive/MyDrive/소회의실 프로젝트/Dataset.xlsx')\n","file =dataset.copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BvkmhiqAC9WR","executionInfo":{"status":"ok","timestamp":1626406882985,"user_tz":-540,"elapsed":421,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"7efa9b4f-861c-4080-b9cb-bb5302b63bb8"},"source":["print(file.columns)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Index(['고객구분코드', '주문일자', '고객성별구분코드', '동일나이군구분코드', '주소(시도)', '주문시간대', '상품번호',\n","       '상품명', '거래소구분코드', '매도매수구분코드', '주문구분코드', '실주문단가', '주문수량', '총체결수량',\n","       '총체결금액', '전일종가', '당일시가', '일중고가', '일중저가', '당일종가', '거래수량', '거래대금',\n","       '상한가여부', '하한가여부'],\n","      dtype='object')\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XGHGf6qzuV28"},"source":["## 주문일자\n","file['date'] = pd.to_datetime(file['주문일자'],format='%Y%m%d').astype(str)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Wso8AZGIyhVW"},"source":["##상품번호\n","file['code'] = [code.split('A')[1] for code in file['상품번호']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GZ1nwDZT8mWE"},"source":["customer_info = pd.DataFrame(file.groupby(['고객구분코드','고객성별구분코드','동일나이군구분코드','주소(시도)'])['상품명'].nunique()).reset_index()\n","customer_info= customer_info.set_index('고객구분코드')\n","customer_info =customer_info.rename(columns={'상품명':'상품개수','주소(시도)':'주소'})"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KIm4Glv1so6P"},"source":["### 1. 투자상품의 종류 \n","간접(ETF, 지수 상품)의 개수/ 전체 종목 개수\n"]},{"cell_type":"markdown","metadata":{"id":"IsA5KalNst7i"},"source":["2. 투자한 섹터 개수\n"]},{"cell_type":"markdown","metadata":{"id":"VKd8_0alw4GE"},"source":["3. 종목보유기간: 종목보유기간: 매수-매도 기간 \n","거래량을 차감해서 계산하는 형태 \n"]},{"cell_type":"markdown","metadata":{"id":"PY99_hpHt5-2"},"source":["### 4. 투자한 개별회사 주식종목의 시가총액: 대형주/ 중형주/ 소형주/ KOSDAQ 비중\n"]},{"cell_type":"code","metadata":{"id":"ruL25if7CDd9"},"source":["kosdaq_tickers = stock.get_market_ticker_list(\"20200120\", market=\"KOSDAQ\")\n","kospi_tickers = stock.get_market_ticker_list(\"20200120\", market=\"KOSPI\")\n","kospi_caps  = stock.get_market_cap_by_ticker(\"20200120\").loc[kospi_tickers,'시가총액'].sort_values(ascending= False)\n","kosdaq_caps  = stock.get_market_cap_by_ticker(\"20200120\").loc[kosdaq_tickers,'시가총액'].sort_values(ascending= False)\n","\n","kosdaq_tickers_2 = stock.get_market_ticker_list(\"20200331\", market=\"KOSDAQ\")\n","kospi_tickers_2 = stock.get_market_ticker_list(\"20200331\", market=\"KOSPI\")\n","kospi_caps_2  = stock.get_market_cap_by_ticker(\"20200331\").loc[kospi_tickers_2,'시가총액'].sort_values(ascending= False)\n","kosdaq_caps_2  = stock.get_market_cap_by_ticker(\"20200331\").loc[kosdaq_tickers_2,'시가총액'].sort_values(ascending= False)\n","kospi_caps = pd.concat([kospi_caps,kospi_caps_2],axis=1).mean(axis=1)\n","kosdaq_caps = pd.concat([kosdaq_caps,kosdaq_caps_2],axis=1).mean(axis=1).index\n","\n","\n","large_cap = kospi_caps[:100].index \n","medium_cap = kospi_caps[100:300].index\n","small_cap = kospi_caps[300:].index\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vXsPg9FWxZU_"},"source":["#stock_type\n","file['stock_type']= ' '\n","file.loc[file['code'].isin(large_cap), 'stock_type'] ='large_cap'\n","file.loc[file['code'].isin(medium_cap), 'stock_type'] ='medium_cap'\n","file.loc[file['code'].isin(small_cap), 'stock_type'] ='small_cap'\n","file.loc[file['code'].isin(kosdaq_caps), 'stock_type'] ='kosdaq_cap'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MoOU1EP-ybW6"},"source":["# 종목타입별 비중 --각 상품의 종류만 따졌을 때\n","# cap = file.groupby(['고객번호','상품번호','stock_type'])['stock_type'].count()>0 \n","# cap = cap.unstack().fillna(0).groupby(['고객번호']).sum()\n","# customer_info = customer_info.join(cap)\n","# customer_info[['ETF','large_cap','medium_cap','small_cap','kosdaq_cap']] = customer_info[['ETF','large_cap','medium_cap','small_cap','kosdaq_cap']].apply(lambda x: x/customer_info['상품명']) "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"V5UrdV7luLg-"},"source":["## 17.매수금액, 18.매수수량"]},{"cell_type":"code","metadata":{"id":"K2tJ3DSluTcO"},"source":["#종목타입별 매수금액 비중\n","\n","#구매자별 매수금액\n","customer_purchase = file.loc[file['매도매수구분코드']==2,:].groupby(['고객구분코드'])['총체결금액'].sum() \n","customer_amount = file.loc[file['매도매수구분코드']==2,:].groupby(['고객구분코드'])['총체결수량'].sum()\n","#구매자별 상품별 매수금액\n","product_purchase = file.loc[file['매도매수구분코드']==2,:].groupby(['고객구분코드','상품번호','stock_type'])['총체결금액'].sum().unstack().fillna(0)\n","#구매자별 종목타입별 매수금액 비중\n","type_purchase = product_purchase.groupby('고객구분코드').sum().apply(lambda x: x/customer_purchase )\n","\n","customer_info = customer_info.join(type_purchase)\n","customer_info['총매수금액']= customer_purchase\n","customer_info['총매수수량'] = customer_amount"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7GgpUQCrlB-E"},"source":["## PER, PBR, ROE, PSR, PEG\n","5. PER: 대 /중 / 소 / KOSDAQ 각각의 거래액기준 가중평균\n","6. PBR: 대 /중 / 소 / KOSDAQ 각각의 거래액기준 가중평균\n","7. ROE: 대 /중 / 소 / KOSDAQ 각각의 거래액기준 가중평균\n","8. PEG: 대 /중 / 소 / KOSDAQ 각각의 거래액기준 가중평균\n","  * PEGR = PER / EPS 연평균 증가율\n","9. PSR: 대 /중 / 소 / KOSDAQ 각각의 거래액기준 가중평균\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"xpZ9zJ3h98lp"},"source":["# finance_kospi = stock.get_market_fundamental_by_ticker(\"20200120\", market= 'KOSPI')\n","# finance_kospi_2 = stock.get_market_fundamental_by_ticker(\"20200331\", market= 'KOSPI')\n","# pd.concat([finance_kospi['PER'], finance_kospi_2['PER']], axis=1)#.mean(axis=1)\n","# # df = stock.get_market_fundamental_by_ticker(\"20200331\", market= 'KOSDAQ')\n","# # df = stock.get_market_fundamental_by_ticker(\"20200120\", market= 'KOSDAQ')\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dJQ86QdtCwmW"},"source":["# file['주문일자'] = file['주문일자'].apply(lambda x:x.strftime('%Y%m%d'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MUroo5DeC9eP"},"source":["# file = file[:200].copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":683},"id":"j6JBCH5iDKCF","executionInfo":{"status":"ok","timestamp":1626400936906,"user_tz":-540,"elapsed":403,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"a5adac40-6df3-430f-c084-1307bc555abb"},"source":["\n","file.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>고객구분코드</th>\n","      <th>주문일자</th>\n","      <th>고객성별구분코드</th>\n","      <th>동일나이군구분코드</th>\n","      <th>주소(시도)</th>\n","      <th>주문시간대</th>\n","      <th>상품번호</th>\n","      <th>상품명</th>\n","      <th>거래소구분코드</th>\n","      <th>매도매수구분코드</th>\n","      <th>주문구분코드</th>\n","      <th>실주문단가</th>\n","      <th>주문수량</th>\n","      <th>총체결수량</th>\n","      <th>총체결금액</th>\n","      <th>전일종가</th>\n","      <th>당일시가</th>\n","      <th>일중고가</th>\n","      <th>일중저가</th>\n","      <th>당일종가</th>\n","      <th>거래수량</th>\n","      <th>거래대금</th>\n","      <th>상한가여부</th>\n","      <th>하한가여부</th>\n","      <th>code</th>\n","      <th>stock_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A0001</td>\n","      <td>20200128</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>경기</td>\n","      <td>1</td>\n","      <td>00000A091970</td>\n","      <td>나노캠텍</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3795</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>75900</td>\n","      <td>3215</td>\n","      <td>3710</td>\n","      <td>4125</td>\n","      <td>3660</td>\n","      <td>4095</td>\n","      <td>17266597</td>\n","      <td>67323312855</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>091970</td>\n","      <td>kosdaq_cap</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A0001</td>\n","      <td>20200130</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>경기</td>\n","      <td>3</td>\n","      <td>00000A045060</td>\n","      <td>오공</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>7710</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>154200</td>\n","      <td>7690</td>\n","      <td>8150</td>\n","      <td>8380</td>\n","      <td>7360</td>\n","      <td>7920</td>\n","      <td>15686931</td>\n","      <td>125404000000</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>045060</td>\n","      <td>kosdaq_cap</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A0001</td>\n","      <td>20200313</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>경기</td>\n","      <td>1</td>\n","      <td>00000A253840</td>\n","      <td>수젠텍</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>11800</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>118000</td>\n","      <td>13600</td>\n","      <td>12200</td>\n","      <td>12250</td>\n","      <td>10150</td>\n","      <td>10750</td>\n","      <td>3731106</td>\n","      <td>40782765600</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>253840</td>\n","      <td>kosdaq_cap</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A00010</td>\n","      <td>20200220</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>경남</td>\n","      <td>3</td>\n","      <td>00000A009190</td>\n","      <td>대양금속보통주</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3505</td>\n","      <td>14</td>\n","      <td>14</td>\n","      <td>49070</td>\n","      <td>3615</td>\n","      <td>3615</td>\n","      <td>3675</td>\n","      <td>3475</td>\n","      <td>3505</td>\n","      <td>635410</td>\n","      <td>2250893355</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>009190</td>\n","      <td>small_cap</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A000100</td>\n","      <td>20200211</td>\n","      <td>2</td>\n","      <td>40</td>\n","      <td>서울</td>\n","      <td>1</td>\n","      <td>00000A001740</td>\n","      <td>SK네트웍스보통주</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4875</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>14625</td>\n","      <td>4780</td>\n","      <td>4800</td>\n","      <td>4885</td>\n","      <td>4800</td>\n","      <td>4850</td>\n","      <td>1263089</td>\n","      <td>6112026870</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>001740</td>\n","      <td>medium_cap</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    고객구분코드      주문일자  고객성별구분코드  동일나이군구분코드  ... 상한가여부  하한가여부    code  stock_type\n","0    A0001  20200128         1         30  ...     N      N  091970  kosdaq_cap\n","1    A0001  20200130         1         30  ...     N      N  045060  kosdaq_cap\n","2    A0001  20200313         1         30  ...     N      N  253840  kosdaq_cap\n","3   A00010  20200220         1         20  ...     N      N  009190   small_cap\n","4  A000100  20200211         2         40  ...     N      N  001740  medium_cap\n","\n","[5 rows x 26 columns]"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"e7zbIJGFFyM1"},"source":["PER_list = []\n","PBR_list = []\n","for i in file.index:\n","  try:\n","    df = stock.get_market_fundamental_by_date(file['주문일자'][i],file['주문일자'][i], file['code'][i])                                              \n","    PER_list.append(df['PER'].values[0])\n","    PBR_list.append(df['PBR'].values[0])\n","  except:\n","    PER_list.append(np.nan)\n","    PBR_list.append(np.nan)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TF1u4OsHa2_g"},"source":["## PER, PBR, ROE\n","\n","# file['PER'] = [stock.get_market_fundamental_by_date(file['주문일자'][i],file['주문일자'][i], file['code'][i])['PER'] for i in file.index ]\n","# file['PBR'] = [stock.get_market_fundamental_by_date(file['주문일자'][i],file['주문일자'][i], file['code'][i])['PBR'] for i in file.index ]\n","file['PER'] =PER_list\n","file['PBR'] =PBR_list\n","file['ROE'] = file['PER']/ file['PBR']\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ip2kk1QGAdmZ"},"source":["#고객의 상품별 PER 평균\n","product_per = file.groupby(['고객구분코드','상품번호','stock_type'])['PER'].mean().unstack().fillna(0)\n","#고객의 상품별 구매금액 비중\n","product_purchase_rate = product_purchase.apply(lambda x: x/customer_purchase )\n","\n","#고객별 종목타입별 PER 가중평균\n","per_rate = product_per* product_purchase_rate\n","type_per = per_rate.groupby('고객구분코드').sum()\n","\n","#고객별 PER 가중평균 \n","# np.sum(type_PER* type_purchase, axis=1)\n","\n","customer_info = customer_info.join(type_per, rsuffix='_PER')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"t6Dc7XPSFiyQ"},"source":["for col in ['PBR','ROE']:\n","  #고객의 상품별 PBR, ROE 평균\n","  product_col = file.groupby(['고객구분코드','상품번호','stock_type'])[col].mean().unstack().fillna(0)\n","  \n","  #고객별 종목타입별 PBR, ROE 가중평균\n","  col_rate = product_col* product_purchase_rate\n","  type_col = col_rate.groupby('고객구분코드').sum()\n","\n","  customer_info = customer_info.join(type_col, rsuffix='_'+col)\n","\n","  #고객별 PER 가중평균 \n","  # np.sum(type_PER* type_purchase, axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OqZ2CwoDsPVy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625705917497,"user_tz":-540,"elapsed":515,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"dba46f44-f174-4683-ac6d-9502f26ca7a9"},"source":["# ## PEG -- EPS가 (-)일 때 0으로 기록되어 있어서 직접 EPS부터 구해야 함\n","# stock.get_market_fundamental_by_date(file['주문일시'][38],file['주문일시'][38], file['상품번호'][38])['EPS']\n","# stock.get_market_fundamental_by_date(file['주문일시'][38]-datetime.timedelta(weeks = 156),file['주문일시'][38]-datetime.timedelta(weeks = 156), file['상품번호'][38])['EPS']\n","# # dart.finstate(file['상품번호'][38], '2020','11011')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["날짜\n","2017-02-06    0\n","Name: EPS, dtype: int32"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"markdown","metadata":{"id":"lYDxlm74w3Ng"},"source":["10. 배당율: 대 /중 / 소 / KOSDAQ 각각의 거래액기준 가중평균\n"]},{"cell_type":"markdown","metadata":{"id":"QPWPv24tAFTW"},"source":["## 11. 외국인 매매, 기관매매와의 매도/매수 일치 횟수 (%)"]},{"cell_type":"code","metadata":{"id":"Y0mKQDLLPUv9"},"source":["# pykrx 모듈 에러\n","\n","# stock.get_exhaustion_rates_of_foreign_investment_by_date(file['주문일시'][38],file['주문일시'][38], file['상품번호'][38])\n","# help(stock.get_exhaustion_rates_of_foreign_investment_by_date)\n","# stock.get_exhaustion_rates_of_foreign_investment_by_date(\"20200120\", \"20200120\", \"005930\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fAEsYVAVVmG6"},"source":["#### ETF 제외 -외국인,기관 순매수량"]},{"cell_type":"code","metadata":{"id":"8A618O7PRp2p"},"source":["for i in file.index:\n","  df = stock.get_market_trading_value_by_date(file['주문일자'][i],file['주문일자'][i], file['code'][i])\n","  file.loc[i,'외국인_매도매수구분코드'] = df['외국인합계'].values[0] \n","  file.loc[i,'기관_매도매수구분코드'] = df['기관합계'].values[0]\n","\n","# file['기관_매도매수구분코드'] = [stock.get_market_trading_value_by_date(file['주문일자'][i],file['주문일자'][i], file['code'][i])['기관합계'].values[0] for i in file.index ]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-EIk6tW5Mgkp"},"source":["##### ETF 외국인, 기관 순매수량 끌어오기- 크롤링\n"]},{"cell_type":"code","metadata":{"collapsed":true,"id":"TXnMdM4zUrUx"},"source":["# import pandas as pd\n","# import requests\n","# import time\n","# import random\n","\n","# etf_tickers= stock.get_etf_ticker_list('20200120')  #20200331과 똑같음\n","# headers = {\"user-agent\":\"Mozilla/5.0\"}\n","# df = pd.DataFrame()\n","\n","# for i in range(len(etf_tickers)):\n","#     for j in range(16, 19):\n","#         url = \"https://finance.naver.com/item/frgn.nhn?code=\" + etf_tickers[i] + \"&page=\"+str(j)\n","    \n","    \n","#         resp = requests.get(url, headers = headers)\n","#         resp.text\n","\n","#         pd_read = pd.read_html(resp.text)\n","        \n","#         #for i in range(len(pd_read)):\n","        \n","#         new_df = pd_read[2].dropna(axis=0)\n","#         # new_df = new_df.dropna(axis=0)\n","#         new_df.insert(0, \"종목코드\", etf_tickers[i])\n","#         df = pd.concat([df, new_df])\n","        \n","#     time.sleep(random.uniform(2,4))\n","    \n","    \n","# display(df)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SEWbEaRqMkVj"},"source":["##### ETF - 외국인, 기관 순매수량"]},{"cell_type":"code","metadata":{"id":"low-Um2QLkTn"},"source":["ETF_investors = pd.read_csv('/content/drive/MyDrive/소회의실 프로젝트/투자자별순매매_ETF.csv')\n","\n","ETF_investors.iloc[0,0]= '종목코드'\n","ETF_investors.iloc[0,6] = '기관_순매매량'\n","ETF_investors.iloc[0,7] = '외국인_순매매량'\n","\n","ETF_investors.columns = ETF_investors.iloc[0,:]\n","ETF_investors.drop(0, axis=0, inplace=True)\n","\n","##type변환\n","ETF_investors['날짜'] = pd.to_datetime(ETF_investors['날짜'] ) \n","ETF_investors['기관_순매매량']= ETF_investors['기관_순매매량'].astype(float)\n","ETF_investors['외국인_순매매량'] = ETF_investors['외국인_순매매량'].astype(float)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rm36EV41NtmP"},"source":["ETF_investors['종목코드'] = ETF_investors['종목코드'].astype(int).apply(lambda x: '{0:06d}'.format(x)).astype(str)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ka1TVhDlM0ki"},"source":["ETF_idx = file.loc[file['stock_type']== 'ETF'].index\n","file.loc[ETF_idx,'외국인_매도매수구분코드'] = [ETF_investors.loc[(ETF_investors['종목코드']== file['상품번호'][i])& (ETF_investors['날짜']==file['주문일시'][i].strftime('%Y-%m-%d'))]['외국인_순매매량']for i in ETF_idx]\n","file.loc[ETF_idx,'기관_매도매수구분코드'] = [ETF_investors.loc[(ETF_investors['종목코드']== file['상품번호'][i])& (ETF_investors['날짜']==file['주문일시'][i].strftime('%Y-%m-%d'))]['기관_순매매량'] for i in ETF_idx]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CNwV4EUJVYj_"},"source":["#### 매도매수구분코드, 매도매수일치비율"]},{"cell_type":"code","metadata":{"id":"SN8RqtsO-b2e"},"source":["file['외국인_매도매수구분코드'] = file['외국인_매도매수구분코드'].apply(lambda x: 1 if x<0 else (2 if x>0 else 0))\n","file['기관_매도매수구분코드'] = file['기관_매도매수구분코드'].apply(lambda x: 1 if x<0 else (2 if x>0 else 0))\n","customer_info['매도매수일치_외국인'] = file.loc[file['외국인_매도매수구분코드'] ==file['매도매수구분코드'],['고객구분코드','매도매수구분코드']].groupby('고객구분코드').count().apply(lambda x: x/file.groupby('고객구분코드')['매도매수구분코드'].count())\n","customer_info['매도매수일치_기관'] = file.loc[file['기관_매도매수구분코드'] ==file['매도매수구분코드'],['고객구분코드','매도매수구분코드']].groupby('고객구분코드').count().apply(lambda x: x/file.groupby('고객구분코드')['매도매수구분코드'].count())"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"D5JaLCHSqc8E"},"source":["## ATR"]},{"cell_type":"code","metadata":{"collapsed":true,"id":"N0QL8caPtG52"},"source":["# from pandas.tseries.offsets import BusinessDay\n","# help(np.busday_offset)\n","# help(pd.tseries.offsets.BusinessDay.rollforward)\n","# help(pd.tseries.offsets.DateOffset)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_Dw6BsTWGLp_"},"source":["# ## 모든 상품에 대해서 2020-01-20 -Businessday(n=20) ~2020-03-31 ohlcv를 만들고 ohlcv에 전일종가와 TR 구하기, --> ATR_7, ATR_14만들기 --> 코드는 db에서 찾는 형태로 해야 할 듯함. \n","# sample_ohlcv = stock.get_market_ohlcv_by_date((file['주문일시'][0]-BusinessDay(n=7)).strftime('%Y%m%d'), file['주문일시'][0].strftime('%Y%m%d'), file['상품번호'][0])\n","# sample_ohlcv['전일종가'] = sample_ohlcv['종가'].shift(1)\n","# sample_ohlcv['TR'] = [max(sample_ohlcv['전일종가'][i],sample_ohlcv['고가'][i])- min(sample_ohlcv['전일종가'][i],sample_ohlcv['저가'][i]) for i in sample_ohlcv.index]\n","# sample_ohlcv['TR'].mean() # ATR_7"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ugCXBrqh18eX"},"source":["# ohlcv에 없는 종목들, 62개 미만 종목 삭제 및 다시 추가\n","# ohlcv= pd.read_csv('/content/drive/MyDrive/소회의실 프로젝트/ohlcv_2020.csv', encoding = 'euc-kr')\n","# ohlcv['종목코드'] = ohlcv['종목코드'].astype(int).apply(lambda x: '{0:06d}'.format(x)).astype(str)\n","\n","# update_tickers = ohlcv.groupby('종목코드')['종목코드'].count()[ohlcv.groupby('종목코드')['종목코드'].count() != 62].index\n","# # ohlcv.reset_index(drop=True, inplace= True)\n","# ohlcv.drop(ohlcv.loc[ohlcv['종목코드'].isin(update_tickers)].index, inplace= True)\n","\n","# new_code = np.setdiff1d(file['code'] ,ohlcv['종목코드'].unique())\n","# for code in new_code:\n","#   new_ohlcv =stock.get_market_ohlcv_by_date('20200101', '20200331', code)\n","#   new_ohlcv['전일종가'] = new_ohlcv['종가'].shift(1)\n","#   new_ohlcv = new_ohlcv.reset_index()\n","#   new_ohlcv.날짜=new_ohlcv.날짜.astype(str)\n","#   new_ohlcv.insert(0, \"종목코드\",code)\n","#   # print(new_ohlcv)\n","#   ohlcv = pd.concat([ohlcv,new_ohlcv]) \n","\n","# for code in update_tickers:\n","#   new_ohlcv =stock.get_market_ohlcv_by_date('20200101', '20200331', code)\n","#   new_ohlcv['전일종ㅁ가'] = new_ohlcv['종가'].shift(1)\n","#   new_ohlcv = new_ohlcv.reset_index()\n","#   new_ohlcv.날짜=new_ohlcv.날짜.astype(str)\n","#   new_ohlcv.insert(0, \"종목코드\",code)\n","#   # print(new_ohlcv)\n","#   ohlcv = pd.concat([ohlcv,new_ohlcv]) \n","\n","\n","# ohlcv.reset_index(drop=True, inplace= True)\n","# ohlcv['TR'] = [max(ohlcv['전일종가'][i],ohlcv['고가'][i])- min(ohlcv['전일종가'][i],ohlcv['저가'][i]) for i in ohlcv.index]\n","# ohlcv = ohlcv.set_index('날짜')\n","# ATR_7 = pd.DataFrame(ohlcv.groupby('종목코드')['TR'].rolling(7).mean())\n","# ATR_14 = pd.DataFrame(ohlcv.groupby('종목코드')['TR'].rolling(14).mean())\n","\n","# ATR_7.columns =['ATR_7']\n","# ATR_14.columns =['ATR_14']\n","\n","# ohlcv = pd.merge(ohlcv, pd.concat([ATR_7,ATR_14], axis=1), on= ['종목코드','날짜'])\n","# ohlcv.to_csv('/content/drive/MyDrive/소회의실 프로젝트/ohlcv_ATR.csv', encoding= 'cp949')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ByUDYJOCdNYJ","executionInfo":{"status":"ok","timestamp":1626417984312,"user_tz":-540,"elapsed":978,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"464e8747-209e-4239-e60d-f300b13ccf6d"},"source":["ohlcv = pd.read_csv('/content/drive/MyDrive/소회의실 프로젝트/ohlcv_ATR.csv', encoding = 'cp949')\n","ohlcv.iloc[:142779 ,1] =ohlcv.iloc[:142779 ,1].astype(int).apply(lambda x: '{0:06d}'.format(x)).astype(str) \n","ohlcv.reset_index(drop=True, inplace= True)\n","ohlcv.set_index('날짜',inplace= True)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py:2718: DtypeWarning: Columns (1) have mixed types.Specify dtype option on import or set low_memory=False.\n","  interactivity=interactivity, compiler=compiler, result=result)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"VAOg8QM659NJ"},"source":["file['TR'] = [max(file['전일종가'][i],file['일중고가'][i])- min(file['전일종가'][i],file['일중저가'][i]) for i in file.index]\n","file['ATR_7'] = [ohlcv.loc[(ohlcv['종목코드']== file['code'][i])& (ohlcv.index==file['date'][i])]['ATR_7'].values[0] for i in file.index]\n","file['ATR_14'] = [ohlcv.loc[(ohlcv['종목코드']== file['code'][i])& (ohlcv.index==file['date'][i])]['ATR_14'].values[0] for i in file.index]\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_fp5JfBXVnWu"},"source":["for col in ['TR','ATR_7','ATR_14']:\n","  #고객의 상품별 TR(ATR) 평균\n","  product_col = file.groupby(['고객구분코드','code','stock_type'])[col].mean().unstack().fillna(0)\n","  \n","  #고객별 종목타입별 TR(ATR) 가중평균\n","  col_rate = product_col* product_purchase_rate\n","  type_col = col_rate.groupby('고객구분코드').sum()\n","\n","  customer_info = customer_info.join(type_col, rsuffix='_'+col)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"204mzCEtGr_a"},"source":["sample = file[:100].copy()\n","sample['ATR_7'] = [ohlcv.loc[(ohlcv['종목코드']== sample['code'][i])& (ohlcv.index==sample['date'][i])]['ATR_7'].values[0] for i in sample.index]\n","sample['ATR_14'] = [ohlcv.loc[(ohlcv['종목코드']== sample['code'][i])& (ohlcv.index==sample['date'][i])]['ATR_14'].values[0] for i in sample.index]\n","\n","for col in ['TR','ATR_7','ATR_14']:\n","  #고객의 상품별 TR(ATR) 평균\n","  product_col = sample.groupby(['고객구분코드','code','stock_type'])[col].mean().unstack().fillna(0)\n","  \n","  #고객별 종목타입별 TR(ATR) 가중평균\n","  col_rate = product_col* product_purchase_rate\n","  type_col = col_rate.groupby('고객구분코드').sum()\n","\n","  customer_info = customer_info.join(type_col, rsuffix='_'+col)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":802},"id":"vM3b4zs4SnPQ","executionInfo":{"status":"ok","timestamp":1626421757618,"user_tz":-540,"elapsed":489,"user":{"displayName":"H lee","photoUrl":"","userId":"11055968235792366534"}},"outputId":"fe7e1ae0-dd0b-49d9-b8be-c3e25ad287db"},"source":["customer_info"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>고객성별구분코드</th>\n","      <th>동일나이군구분코드</th>\n","      <th>주소</th>\n","      <th>상품개수</th>\n","      <th>kosdaq_cap</th>\n","      <th>large_cap</th>\n","      <th>medium_cap</th>\n","      <th>small_cap</th>\n","      <th>총매수금액</th>\n","      <th>총매수수량</th>\n","      <th>kosdaq_cap_TR</th>\n","      <th>large_cap_TR</th>\n","      <th>medium_cap_TR</th>\n","      <th>small_cap_TR</th>\n","      <th>kosdaq_cap_ATR_7</th>\n","      <th>large_cap_ATR_7</th>\n","      <th>medium_cap_ATR_7</th>\n","      <th>small_cap_ATR_7</th>\n","      <th>kosdaq_cap_ATR_14</th>\n","      <th>large_cap_ATR_14</th>\n","      <th>medium_cap_ATR_14</th>\n","      <th>small_cap_ATR_14</th>\n","    </tr>\n","    <tr>\n","      <th>고객구분코드</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>A0001</th>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>경기</td>\n","      <td>149</td>\n","      <td>0.778486</td>\n","      <td>0.009521</td>\n","      <td>0.024741</td>\n","      <td>0.187252</td>\n","      <td>69911181.0</td>\n","      <td>25198.0</td>\n","      <td>4188.255245</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3083.917099</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1926.197049</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>A00010</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>경남</td>\n","      <td>10</td>\n","      <td>0.679107</td>\n","      <td>0.000000</td>\n","      <td>0.075550</td>\n","      <td>0.245344</td>\n","      <td>725350.0</td>\n","      <td>366.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>49.068725</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>57.480507</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>46.264798</td>\n","    </tr>\n","    <tr>\n","      <th>A000100</th>\n","      <td>2</td>\n","      <td>40</td>\n","      <td>서울</td>\n","      <td>10</td>\n","      <td>0.452763</td>\n","      <td>0.289233</td>\n","      <td>0.258003</td>\n","      <td>0.000000</td>\n","      <td>12100965.0</td>\n","      <td>602.0</td>\n","      <td>642.924139</td>\n","      <td>43.384970</td>\n","      <td>2858.032560</td>\n","      <td>0.000000</td>\n","      <td>1556.148074</td>\n","      <td>51.648773</td>\n","      <td>6148.128655</td>\n","      <td>0.000000</td>\n","      <td>1652.619035</td>\n","      <td>59.912577</td>\n","      <td>4362.054111</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>A0001000</th>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>광주</td>\n","      <td>6</td>\n","      <td>0.747271</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.252729</td>\n","      <td>1223372.0</td>\n","      <td>197.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>184.492419</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>172.216994</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>179.798874</td>\n","    </tr>\n","    <tr>\n","      <th>A00010000</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>경기</td>\n","      <td>12</td>\n","      <td>0.363163</td>\n","      <td>0.515705</td>\n","      <td>0.093949</td>\n","      <td>0.027182</td>\n","      <td>17936233.0</td>\n","      <td>3683.0</td>\n","      <td>0.000000</td>\n","      <td>979.838966</td>\n","      <td>338.218175</td>\n","      <td>3.533713</td>\n","      <td>0.000000</td>\n","      <td>1042.460253</td>\n","      <td>263.998076</td>\n","      <td>3.902617</td>\n","      <td>0.000000</td>\n","      <td>981.680769</td>\n","      <td>185.348929</td>\n","      <td>2.815321</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>A0009995</th>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>인천</td>\n","      <td>6</td>\n","      <td>0.131726</td>\n","      <td>0.825314</td>\n","      <td>0.041922</td>\n","      <td>0.001039</td>\n","      <td>19312230.0</td>\n","      <td>1030.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>A0009996</th>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>서울</td>\n","      <td>12</td>\n","      <td>0.877305</td>\n","      <td>0.122695</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4670115.0</td>\n","      <td>1809.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>A0009997</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>경기</td>\n","      <td>2</td>\n","      <td>0.027359</td>\n","      <td>0.972641</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1489450.0</td>\n","      <td>37.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>A0009998</th>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>충북</td>\n","      <td>10</td>\n","      <td>0.832721</td>\n","      <td>0.165367</td>\n","      <td>0.000000</td>\n","      <td>0.001912</td>\n","      <td>250931215.0</td>\n","      <td>9170.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>A0009999</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>충북</td>\n","      <td>14</td>\n","      <td>0.447790</td>\n","      <td>0.478635</td>\n","      <td>0.062401</td>\n","      <td>0.011174</td>\n","      <td>14659280.0</td>\n","      <td>928.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>24989 rows × 22 columns</p>\n","</div>"],"text/plain":["           고객성별구분코드  동일나이군구분코드  ... medium_cap_ATR_14  small_cap_ATR_14\n","고객구분코드                          ...                                    \n","A0001             1         30  ...          0.000000          0.000000\n","A00010            1         20  ...          0.000000         46.264798\n","A000100           2         40  ...       4362.054111          0.000000\n","A0001000          1         30  ...          0.000000        179.798874\n","A00010000         1         20  ...        185.348929          2.815321\n","...             ...        ...  ...               ...               ...\n","A0009995          1         30  ...          0.000000          0.000000\n","A0009996          1         40  ...          0.000000          0.000000\n","A0009997          1         20  ...          0.000000          0.000000\n","A0009998          1         50  ...          0.000000          0.000000\n","A0009999          1         20  ...          0.000000          0.000000\n","\n","[24989 rows x 22 columns]"]},"metadata":{"tags":[]},"execution_count":461}]},{"cell_type":"markdown","metadata":{"id":"pnLyN9zXqaFj"},"source":["### 기타"]},{"cell_type":"markdown","metadata":{"id":"5_SeGP87tyNY"},"source":["12. 공모주 비중: 공모주 상품개수/ 전체상품개수\n","13. 인버스,곱버스, 레버리지 비중: 레버리지,인버스,곱버스 상품개수/ 전체상품개수  -> yet\n","14. 수익률: (총매도금액/총매수금액 -1)의 거래액기준 평균\n"," * 매도를 하지 않은 경우의 수익률은 어떻게 계산할지 조금 더 고민\n","15. 계좌개수: 계좌개수\n","16. 시간대: ?\n","19. 주문증거금율: 평균치\n","20. 반대매매횟수\n","21. 예약주문 횟수\n","22. 상한가,하한가 여부 횟수: \n","주식을 산 날의 변동성을 보기위한 지표 \n"]}]}